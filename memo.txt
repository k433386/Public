.map(_.toInt) //与えられた関数を配列のすべての要素に対して呼び出す　+　toInt

.take(n) //最初のn個の要素からなるリストを求める
.drop(n) //最初のn個の要素を除いたリストを求める

.combinations(n) //n個選択する組み合わせを生成する
.permutations //順列の組み合わせを生成する

.max
.min
.product

.update
.updated

.sorted //配列を昇順で並び替える
.sortBy(_.X) //指定した要素で配列を並び替える
.sortBy(_._2) //mapの要素で並び替え？

.filter(x => X) //指定した要素で新しい配列を取得

.distinct //重複を除いた新リストを取得

.indexOf() //インデックスを取得

.mkString() //配列を文字列として結合

.count(x => X) //条件を満たす要素を数える

for (X <- Array) // 配列の要素を直接取り出す
for ((name, amount) <- result) //複数を同時に取ることもある (タプル)

Array.ofDim[]() //N次元配列の定義
Array.fill()() //初期値埋め

var X : Array[] = Array.empty //空の配列の定義
var X : Map[] = Map.empty //空のマップの定義
Map = Map - key //キーと要素の消去

toUpper
toLower //char
toUpperCase
toLowerCase //string

.isDigit //数値であることを判定する

String.format("%10s", x).replace(" ", "0") //文字のゼロ桁埋め

string " "
char ' '


---注意---
classの継承用に空のメソッドを作ること
割り算はDoubleでキャストしておいたほうが吉
Int/Longを疑うこと
mapの要素はArrayにしないほうが吉